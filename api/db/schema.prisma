datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_PRISMA_URL") // uses connection pooling
  directUrl = env("DATABASE_URL_NON_POOLING") // uses a direct connection
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id                  Int         @id @default(autoincrement())
  universityUserId    String      @unique
  name                String?
  hashedPassword      String
  tokens              UserToken[]
  roles               Role[]
  studentUserSessions Session[]   @relation("StudentUserSessions")
  deanUserSessions    Session[]   @relation("DeanUserSessions")
}

model Role {
  id    Int    @id @default(autoincrement())
  type  String @unique
  users User[]
}

model UserToken {
  id     Int    @id @default(autoincrement())
  token  String
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}

model Session {
  id            Int     @id @default(autoincrement())
  title         String?
  date          String
  startTime     String
  endTime       String
  status        String
  studentUser   User?   @relation("StudentUserSessions", map: "StudentUserSessions", fields: [studentUserId], references: [id])
  studentUserId Int?
  deanUser      User?   @relation("DeanUserSessions", map: "DeanUserSessions", fields: [deanUserId], references: [id])
  deanUserId    Int?
}
